name: Integration Tests

on:
  push:
    branches:
      - main
  workflow_dispatch:
   
jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DB: ${{secrets.DB}}
      HOST: ${{ secrets.HOST }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_DIALECT: ${{ secrets.DB_DIALECT }}
      DB_POOL_MIN: ${{secrets.DB_POOL_MIN}}
      DB_POOL_MAX: ${{secrets.DB_POOL_MAX}}
      DB_POOL_ACQUIRE: ${{secrets.DB_POOL_ACQUIRE}}
      DB_POOL_IDLE: ${{secrets.DB_POOL_IDLE}}
      APP_PORT: ${{ secrets.APP_PORT }}
      USERS_CSV_PATH: ${{ secrets.USERS_CSV_PATH }}

    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install MySQL 8
        run: |
          sudo apt-get update -qy
          sudo apt-get install -qy mysql-server-8.0

      - name: Start MySQL Service
        run: sudo service mysql start
        
      - name: Debug Environment Variables
        run: |
          echo "HOST: $HOST"
          echo "DB_USERNAME: $DB_USERNAME"
          echo "DB_PASSWORD: $DB_PASSWORD"
          echo "DB_NAME: $DB_NAME"
      - name: Test MySQL Connection
        run: |
          mysql -h $HOST -u $DB_USERNAME -p"$DB_PASSWORD" -e "SELECT 1"
        continue-on-error: true  # Allow the workflow to continue even if the connection test fails
        
      - name: Capture MySQL Error
        run: |
          result=$(mysql -h $HOST -u $DB_USERNAME -p"$DB_PASSWORD" -e "CREATE DATABASE IF NOT EXISTS $DB" 2>&1)
          echo "$result"
        continue-on-error: true  # Allow the workflow to continue even if there's an error

      - name: Create Database
        run: |
          mysql -h $HOST -u $DB_USERNAME -p$DB_PASSWORD -e "CREATE DATABASE IF NOT EXISTS $DB"

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test
